# Generated by Django 5.0.6 on 2024-10-17 12:18

import data.models
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tel', models.CharField(max_length=31, verbose_name='telephone number')),
                ('adrs', models.CharField(max_length=63, verbose_name='adress')),
                ('adrs2', models.CharField(blank=True, max_length=63, verbose_name='second adress')),
                ('post', models.CharField(max_length=15, verbose_name='post code')),
                ('city', models.CharField(max_length=31)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-last_login'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63, unique=True)),
                ('nb_org', models.IntegerField(verbose_name='maximum of organization')),
                ('nb_access', models.IntegerField(verbose_name='maximum of access')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=63, unique=True)),
                ('tel', models.CharField(max_length=31, verbose_name='telephone number')),
                ('adrs', models.CharField(max_length=63, verbose_name='adress')),
                ('post', models.CharField(max_length=15, verbose_name='post code')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MailBell',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='mailbell', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('frequence', models.IntegerField(default=255)),
                ('newfile', models.BooleanField(default=True)),
                ('newchange', models.BooleanField(default=True)),
                ('newcomment', models.BooleanField(default=True)),
                ('newmessage', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('date_i', models.DateField(verbose_name='start date')),
                ('date_f', models.DateField(verbose_name='end date')),
                ('period', models.DurationField(verbose_name='duration')),
                ('type', models.CharField(choices=[('1', 'Type1'), ('G', 'Goal'), ('R', 'Review ex-post'), ('P', 'Plan'), ('A', 'Audit')], default='1', max_length=1)),
                ('chief', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exers', to=settings.AUTH_USER_MODEL)),
                ('con', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exers', to='data.contract', verbose_name='contract')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exers', to='data.organization', verbose_name='organization in charge')),
            ],
            options={
                'ordering': ['-date_i', '-date_f'],
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('content', models.FileField(upload_to=data.models.file_path)),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('is_template', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_commented', models.BooleanField(default=False)),
                ('is_boycotted', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('con', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='data.contract', verbose_name='contract')),
                ('exer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='data.exercise', verbose_name='exercise')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files_uploaded', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.IntegerField()),
                ('colone', models.IntegerField()),
                ('text', models.TextField(max_length=4095)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_treated', models.BooleanField(default=False)),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('dealer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments_to_deal', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='data.comment')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='data.file')),
            ],
            options={
                'ordering': ['file'],
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=data.models.set_token, unique=True)),
                ('email', models.EmailField(max_length=63)),
                ('activated_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(default=datetime.datetime(2024, 10, 18, 12, 18, 43, 184362, tzinfo=datetime.timezone.utc))),
                ('is_used', models.BooleanField(default=False)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id', 'activated_at', 'expired_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.CharField(choices=[('E', 'Exercise'), ('U', 'User'), ('F', 'File'), ('M', 'Comment'), ('C', 'Contract'), ('T', 'Team'), ('R', 'Right')])),
                ('event', models.CharField(choices=[('C', 'CREATE'), ('U', 'UPDATE'), ('D', 'DELETE'), ('S', 'SHARE')])),
                ('message', models.CharField(max_length=1023)),
                ('trigger_time', models.DateTimeField()),
                ('send_time', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action', to=settings.AUTH_USER_MODEL)),
                ('receiver', models.ManyToManyField(db_index=True, related_name='notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='org',
            field=models.ManyToManyField(db_index=True, related_name='cons', to='data.organization', verbose_name='organizations'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='org',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='data.organization', verbose_name='organization'),
        ),
        migrations.CreateModel(
            name='FileAccess',
            fields=[
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='access', serialize=False, to='data.file')),
                ('org', models.ManyToManyField(default=[], related_name='file_access', to='data.organization', verbose_name='organization')),
                ('user', models.ManyToManyField(related_name='file_access', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrgConRight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_access', models.IntegerField(verbose_name='maximum of access')),
                ('is_principal', models.BooleanField(default=False)),
                ('chief', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='con_chief', to=settings.AUTH_USER_MODEL)),
                ('con', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_rights', to='data.contract', verbose_name='contract')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='con_rights', to='data.organization', verbose_name='organization')),
                ('staff', models.ManyToManyField(related_name='con_staff', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['org', 'con'],
                'unique_together': {('org', 'con')},
            },
        ),
        migrations.CreateModel(
            name='OrgExerRight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('A', 'Approver'), ('C', 'Contributer'), ('O', 'Observer'), ('S', 'Selfdefined'), ('U', 'Undefined')], default='U', max_length=1)),
                ('input', models.BooleanField(default=False)),
                ('output', models.BooleanField(default=False)),
                ('graph', models.BooleanField(default=False)),
                ('rewrite', models.BooleanField(default=False)),
                ('comment', models.BooleanField(default=False)),
                ('download', models.BooleanField(default=False)),
                ('share', models.BooleanField(default=False)),
                ('exer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_rights', to='data.exercise', verbose_name='exercise')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exer_rights', to='data.organization', verbose_name='organization')),
            ],
            options={
                'ordering': ['org', 'exer'],
                'unique_together': {('org', 'exer')},
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('between_org', models.BooleanField(default=False)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share', to='data.file')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_to', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['from_user', 'to_user', 'file'],
                'unique_together': {('from_user', 'to_user', 'file')},
            },
        ),
        migrations.CreateModel(
            name='UserExerRight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('A', 'Approver'), ('C', 'Contributer'), ('O', 'Observer'), ('S', 'Selfdefined'), ('U', 'Undefined')], default='U', max_length=1)),
                ('input', models.BooleanField(default=False)),
                ('output', models.BooleanField(default=False)),
                ('graph', models.BooleanField(default=False)),
                ('rewrite', models.BooleanField(default=False)),
                ('comment', models.BooleanField(default=False)),
                ('download', models.BooleanField(default=False)),
                ('share', models.BooleanField(default=False)),
                ('exer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_rights', to='data.exercise', verbose_name='exercise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exer_rights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'exer'],
                'unique_together': {('user', 'exer')},
            },
        ),
    ]
